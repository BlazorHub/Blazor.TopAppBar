@inherits ParentComponent

@{
  string type = this.Variant switch
  {
    Variants.Standard => null,
    Variants.Fixed => "mdc-top-app-bar--fixed",
    Variants.Prominent => "mdc-top-app-bar--prominent",
    Variants.FixedProminent => "mdc-top-app-bar--fixed mdc-top-app-bar--prominent",
    Variants.Dense => "mdc-top-app-bar--dense",
    Variants.FixedDense => "mdc-top-app-bar--fixed mdc-top-app-bar--dense",
    Variants.ProminentDense => "mdc-top-app-bar--prominent mdc-top-app-bar--dense",
    Variants.FixedProminentDense => "mdc-top-app-bar--fixed mdc-top-app-bar--prominent mdc-top-app-bar--dense",
    Variants.Short => "mdc-top-app-bar--short",
    Variants.ShortAlways => "mdc-top-app-bar--short mdc-top-app-bar--short-collapsed",
    _ => null
  };

  string color = UseDarkMode
    ? $"color:{DarkModeColor};"
    : UseLightMode
      ? $"color:{LightModeColor};"
      : UseColor
        ? $"color:{Color};"
        : string.Empty;

  string background = UseDarkMode
    ? $"background-color:{DarkModeBackgroundColor};"
    : UseLightMode
      ? $"background-color:{LightModeBackgroundColor};"
      : UseBackgroundImage
        ? $"background:url('skyline.jpg') no-repeat center;"
        : UseBackgroundColor
          ? $"background-image:linear-gradient({(int)BackgroundColorDirection}deg, {BackgroundColorStart} 0%, {BackgroundColorEnd} 90%);"
          : string.Empty;
}

<header class="mdc-top-app-bar @type @Class" style="@background @color @Style" @attributes="@ExtraAttributes">
  <div class="mdc-top-app-bar__row">
    <CascadingValue Value="this">
      @ChildContent
    </CascadingValue>
  </div>
</header>